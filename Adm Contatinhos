#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define MAX 100

struct Pessoa{
    char* nome;
    char telefone[10];
    
}pessoa[MAX];

void exibirMenu(){
    printf("\n\tSelecione umas das opções a seguir:\n");
    printf("\t1 - Inserir novo contato\n"
           "\t2 - Pesquisar por um contato\n"
           "\t3 - Remover um contato com 'nome'.\n"
           "\t4 - Alterar um contato\n"
           "\t0 - Sair\n\n");
}

char* alocarMemoria(int tamanho){
    char* info = NULL;
    info = (char*) malloc(sizeof(tamanho) * sizeof(char));

    if(info == NULL){
        printf("ERRO: impossível alocar a quantidade de memória requisitada!");
        exit(1);
    }
    return info;
}

void cadastrarContato(int registro, char* nomeBuscado){
    char dados[MAX];
    strcpy(dados,nomeBuscado);
    setbuf(stdin, NULL);
    
    //Alocação e cópia de dados
    pessoa[registro].nome = alocarMemoria(strlen(dados));
    strcpy(pessoa[registro].nome, dados);

    printf("\t\tTelefone: ");
    scanf("%s", pessoa[registro].telefone);
    setbuf(stdin, NULL);
}

void exibirContato(int indice){
    //printf("\n\tNome: %s\n", pessoa[indice].nome);
    printf("\tIndice encontrado: %d\n", indice);
    printf("\tContatinho encontrado: telefone %s\n", pessoa[indice].telefone);
}

void removerContato(int indice){
 //teste de remoção
    int i;
    printf("\tIndice encontrado: %d\n", indice);
    for(i = indice; i < MAX; i++){
        pessoa[i] = pessoa[i+1];
    }
}

int pesquisarContato(int qtdeContatos, char* nomeBuscado){
    int i;
    
    for(i = 0; i < qtdeContatos; i++){
        if(strcmp(nomeBuscado, pessoa[i].nome) == 0)
            return i;
    }
    return -1;
}

void atualizarContato(int indice){
    
    char* nome;
    char fone[16];
    char dados[MAX];
    //printf("\n\t\tNome: ");
    //scanf("%[^\n]s", dados);
    setbuf(stdin, NULL);
    
    
    //Alocação e cópia de dados
    nome = alocarMemoria(strlen(dados));
    strcpy(nome, dados);
    printf("\tTelefone: ");
    scanf("%s", fone);
    setbuf(stdin, NULL);
    //pessoa[indice].nome = nome;
    strcpy(pessoa[indice].telefone, fone);

}

int leitor(){
    int opcao;
    printf("\n\tOpção escolhida: ");
    scanf("%d", &opcao);
    setbuf(stdin, NULL);
    return opcao;
}

int main(){
    char nome[MAX];
    int numeroRegistro = 0;
    int opcaoEscolhida;
    char I, P, R, A;
    int indice;

    do{
        exibirMenu();
        opcaoEscolhida = leitor();
        
        switch(opcaoEscolhida){
            case 1:
                printf("\n\t\tNome: ");
                scanf("%s", nome);
                indice = pesquisarContato(numeroRegistro, nome);
                
                if(indice >= 0 && indice <= 99)
                    printf("\n\tContatinho ja inserido\n");
                else
                    cadastrarContato(numeroRegistro++, nome);
                break;
                
            case 2:
                printf("\n\tNome: ");
                scanf("%s", nome);
                indice = pesquisarContato(numeroRegistro, nome);

                if(indice >= 0 && indice <= 99)
                    exibirContato(indice);
                else
                    printf("\n\tContatinho nao encontrado\n");
                break;
            
            case 3: 
                // remover
                printf("\n\tNome: ");
                scanf("%s", nome);
                indice = pesquisarContato(numeroRegistro--, nome);
                
                if(indice >= 0 && indice <= 99)
                    removerContato(indice);
                else
                    printf("\n\tOperacao invalida: contatinho nao encontrado\n");
                break;
               
            case 4:
                printf("\n\tNome: ");
                scanf("%s", nome);
                indice = pesquisarContato(numeroRegistro, nome);
                
                if(indice >= 0 && indice <= 99)
                    atualizarContato(indice);
                else
                    printf("\n\tOperacao invalida: contatinho nao encontrado\n");
                break;
                
            case 0:
                printf("\n\tSaindo...");
                break;
            default:
                printf("Opção inválida!\n");
                exibirMenu();
                opcaoEscolhida = leitor();
        }

    }while(opcaoEscolhida != 0);
}
